// Date: 8-8-2013 13:22:45
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package pneumaticCraft.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraftforge.common.util.ForgeDirection;

public class ModelAdvancedPressureTube extends ModelBase{
    //fields
    ModelRenderer Front1;
    ModelRenderer Front2;
    ModelRenderer Front3;
    ModelRenderer Front4;
    ModelRenderer Front5;
    ModelRenderer Front6;
    ModelRenderer Front7;
    ModelRenderer Front8;
    ModelRenderer Back1;
    ModelRenderer Back2;
    ModelRenderer Back3;
    ModelRenderer Back4;
    ModelRenderer Back5;
    ModelRenderer Back6;
    ModelRenderer Back7;
    ModelRenderer Back8;
    ModelRenderer Left1;
    ModelRenderer Left2;
    ModelRenderer Left3;
    ModelRenderer Left4;
    ModelRenderer Left5;
    ModelRenderer Left6;
    ModelRenderer Left7;
    ModelRenderer Left8;
    ModelRenderer Right1;
    ModelRenderer Right2;
    ModelRenderer Right3;
    ModelRenderer Right4;
    ModelRenderer Right5;
    ModelRenderer Right6;
    ModelRenderer Right7;
    ModelRenderer Right8;
    ModelRenderer Up1;
    ModelRenderer Up2;
    ModelRenderer Up3;
    ModelRenderer Up4;
    ModelRenderer Up5;
    ModelRenderer Up6;
    ModelRenderer Up7;
    ModelRenderer Up8;
    ModelRenderer Down1;
    ModelRenderer Down2;
    ModelRenderer Down3;
    ModelRenderer Down4;
    ModelRenderer Down5;
    ModelRenderer Down6;
    ModelRenderer Down7;
    ModelRenderer Down8;
    ModelRenderer Base1;
    ModelRenderer Base2;
    ModelRenderer Base3;
    ModelRenderer Base4;
    ModelRenderer Base5;
    ModelRenderer Base6;
    ModelRenderer Base7;
    ModelRenderer Base8;
    ModelRenderer Base9;
    ModelRenderer Base10;
    ModelRenderer Base11;
    ModelRenderer Base12;
    ModelRenderer Base13;
    ModelRenderer Base14;
    ModelRenderer Base15;
    ModelRenderer Base16;
    ModelRenderer Base17;
    ModelRenderer Base18;
    ModelRenderer Base19;
    ModelRenderer Base20;
    ModelRenderer Base21;
    ModelRenderer Base22;
    ModelRenderer Base23;
    ModelRenderer Base24;
    ModelRenderer CapRight;
    ModelRenderer CapLeft;
    ModelRenderer CapFront;
    ModelRenderer CapBack;
    ModelRenderer CapUp;
    ModelRenderer CapDown;

    public ModelAdvancedPressureTube(){
        textureWidth = 64;
        textureHeight = 32;

        Front1 = new ModelRenderer(this, 0, 0);
        Front1.addBox(0F, 0F, 0F, 1, 4, 4);
        Front1.setRotationPoint(-3F, 14F, -8F);
        Front1.setTextureSize(64, 32);
        Front1.mirror = true;
        setRotation(Front1, 0F, 0F, 0F);
        Front2 = new ModelRenderer(this, 0, 0);
        Front2.addBox(0F, 0F, 0F, 1, 4, 4);
        Front2.setRotationPoint(2F, 14F, -8F);
        Front2.setTextureSize(64, 32);
        Front2.mirror = true;
        setRotation(Front2, 0F, 0F, 0F);
        Front3 = new ModelRenderer(this, 0, 0);
        Front3.addBox(0F, 0F, 0F, 4, 1, 4);
        Front3.setRotationPoint(-2F, 13F, -8F);
        Front3.setTextureSize(64, 32);
        Front3.mirror = true;
        setRotation(Front3, 0F, 0F, 0F);
        Front4 = new ModelRenderer(this, 0, 0);
        Front4.addBox(0F, 0F, 0F, 4, 1, 4);
        Front4.setRotationPoint(-2F, 18F, -8F);
        Front4.setTextureSize(64, 32);
        Front4.mirror = true;
        setRotation(Front4, 0F, 0F, 0F);
        Front5 = new ModelRenderer(this, 0, 0);
        Front5.addBox(0F, 0F, 0F, 1, 1, 4);
        Front5.setRotationPoint(-2F, 14F, -8F);
        Front5.setTextureSize(64, 32);
        Front5.mirror = true;
        setRotation(Front5, 0F, 0F, 0F);
        Front6 = new ModelRenderer(this, 0, 0);
        Front6.addBox(0F, 0F, 0F, 1, 1, 4);
        Front6.setRotationPoint(-2F, 17F, -8F);
        Front6.setTextureSize(64, 32);
        Front6.mirror = true;
        setRotation(Front6, 0F, 0F, 0F);
        Front7 = new ModelRenderer(this, 0, 0);
        Front7.addBox(0F, 0F, 0F, 1, 1, 4);
        Front7.setRotationPoint(1F, 14F, -8F);
        Front7.setTextureSize(64, 32);
        Front7.mirror = true;
        setRotation(Front7, 0F, 0F, 0F);
        Front8 = new ModelRenderer(this, 0, 0);
        Front8.addBox(0F, 0F, 0F, 1, 1, 4);
        Front8.setRotationPoint(1F, 17F, -8F);
        Front8.setTextureSize(64, 32);
        Front8.mirror = true;
        setRotation(Front8, 0F, 0F, 0F);
        Back1 = new ModelRenderer(this, 0, 0);
        Back1.addBox(0F, 0F, 0F, 4, 1, 4);
        Back1.setRotationPoint(-2F, 13F, 4F);
        Back1.setTextureSize(64, 32);
        Back1.mirror = true;
        setRotation(Back1, 0F, 0F, 0F);
        Back2 = new ModelRenderer(this, 0, 0);
        Back2.addBox(0F, 0F, 0F, 4, 1, 4);
        Back2.setRotationPoint(-2F, 18F, 4F);
        Back2.setTextureSize(64, 32);
        Back2.mirror = true;
        setRotation(Back2, 0F, 0F, 0F);
        Back3 = new ModelRenderer(this, 0, 0);
        Back3.addBox(0F, 0F, 0F, 1, 4, 4);
        Back3.setRotationPoint(2F, 14F, 4F);
        Back3.setTextureSize(64, 32);
        Back3.mirror = true;
        setRotation(Back3, 0F, 0F, 0F);
        Back4 = new ModelRenderer(this, 0, 0);
        Back4.addBox(0F, 0F, 0F, 1, 4, 4);
        Back4.setRotationPoint(-3F, 14F, 4F);
        Back4.setTextureSize(64, 32);
        Back4.mirror = true;
        setRotation(Back4, 0F, 0F, 0F);
        Back5 = new ModelRenderer(this, 0, 0);
        Back5.addBox(0F, 0F, 0F, 1, 1, 4);
        Back5.setRotationPoint(1F, 14F, 4F);
        Back5.setTextureSize(64, 32);
        Back5.mirror = true;
        setRotation(Back5, 0F, 0F, 0F);
        Back6 = new ModelRenderer(this, 0, 0);
        Back6.addBox(0F, 0F, 0F, 1, 1, 4);
        Back6.setRotationPoint(-2F, 14F, 4F);
        Back6.setTextureSize(64, 32);
        Back6.mirror = true;
        setRotation(Back6, 0F, 0F, 0F);
        Back7 = new ModelRenderer(this, 0, 0);
        Back7.addBox(0F, 0F, 0F, 1, 1, 4);
        Back7.setRotationPoint(1F, 17F, 4F);
        Back7.setTextureSize(64, 32);
        Back7.mirror = true;
        setRotation(Back7, 0F, 0F, 0F);
        Back8 = new ModelRenderer(this, 0, 0);
        Back8.addBox(0F, 0F, 0F, 1, 1, 4);
        Back8.setRotationPoint(-2F, 17F, 4F);
        Back8.setTextureSize(64, 32);
        Back8.mirror = true;
        setRotation(Back8, 0F, 0F, 0F);
        Left1 = new ModelRenderer(this, 0, 0);
        Left1.addBox(0F, 0F, 0F, 4, 1, 4);
        Left1.setRotationPoint(4F, 13F, -2F);
        Left1.setTextureSize(64, 32);
        Left1.mirror = true;
        setRotation(Left1, 0F, 0F, 0F);
        Left2 = new ModelRenderer(this, 0, 0);
        Left2.addBox(0F, 0F, 0F, 4, 1, 4);
        Left2.setRotationPoint(4F, 18F, -2F);
        Left2.setTextureSize(64, 32);
        Left2.mirror = true;
        setRotation(Left2, 0F, 0F, 0F);
        Left3 = new ModelRenderer(this, 0, 0);
        Left3.addBox(0F, 0F, 0F, 4, 4, 1);
        Left3.setRotationPoint(4F, 14F, -3F);
        Left3.setTextureSize(64, 32);
        Left3.mirror = true;
        setRotation(Left3, 0F, 0F, 0F);
        Left4 = new ModelRenderer(this, 0, 0);
        Left4.addBox(2F, 0F, 0F, 4, 4, 1);
        Left4.setRotationPoint(2F, 14F, 2F);
        Left4.setTextureSize(64, 32);
        Left4.mirror = true;
        setRotation(Left4, 0F, 0F, 0F);
        Left5 = new ModelRenderer(this, 0, 0);
        Left5.addBox(0F, 0F, 0F, 4, 1, 1);
        Left5.setRotationPoint(4F, 14F, 1F);
        Left5.setTextureSize(64, 32);
        Left5.mirror = true;
        setRotation(Left5, 0F, 0F, 0F);
        Left6 = new ModelRenderer(this, 0, 0);
        Left6.addBox(0F, 0F, 0F, 4, 1, 1);
        Left6.setRotationPoint(4F, 14F, -2F);
        Left6.setTextureSize(64, 32);
        Left6.mirror = true;
        setRotation(Left6, 0F, 0F, 0F);
        Left7 = new ModelRenderer(this, 0, 0);
        Left7.addBox(0F, 0F, 0F, 4, 1, 1);
        Left7.setRotationPoint(4F, 17F, -2F);
        Left7.setTextureSize(64, 32);
        Left7.mirror = true;
        setRotation(Left7, 0F, 0F, 0F);
        Left8 = new ModelRenderer(this, 0, 0);
        Left8.addBox(0F, 0F, 0F, 4, 1, 1);
        Left8.setRotationPoint(4F, 17F, 1F);
        Left8.setTextureSize(64, 32);
        Left8.mirror = true;
        setRotation(Left8, 0F, 0F, 0F);
        Right1 = new ModelRenderer(this, 0, 0);
        Right1.addBox(0F, 0F, 0F, 4, 1, 4);
        Right1.setRotationPoint(-8F, 13F, -2F);
        Right1.setTextureSize(64, 32);
        Right1.mirror = true;
        setRotation(Right1, 0F, 0F, 0F);
        Right2 = new ModelRenderer(this, 0, 0);
        Right2.addBox(0F, 0F, 0F, 4, 1, 4);
        Right2.setRotationPoint(-8F, 18F, -2F);
        Right2.setTextureSize(64, 32);
        Right2.mirror = true;
        setRotation(Right2, 0F, 0F, 0F);
        Right3 = new ModelRenderer(this, 0, 0);
        Right3.addBox(0F, 0F, 0F, 4, 4, 1);
        Right3.setRotationPoint(-8F, 14F, -3F);
        Right3.setTextureSize(64, 32);
        Right3.mirror = true;
        setRotation(Right3, 0F, 0F, 0F);
        Right4 = new ModelRenderer(this, 0, 0);
        Right4.addBox(0F, 0F, 0F, 4, 4, 1);
        Right4.setRotationPoint(-8F, 14F, 2F);
        Right4.setTextureSize(64, 32);
        Right4.mirror = true;
        setRotation(Right4, 0F, 0F, 0F);
        Right5 = new ModelRenderer(this, 0, 0);
        Right5.addBox(0F, 0F, 0F, 4, 1, 1);
        Right5.setRotationPoint(-8F, 14F, -2F);
        Right5.setTextureSize(64, 32);
        Right5.mirror = true;
        setRotation(Right5, 0F, 0F, 0F);
        Right6 = new ModelRenderer(this, 0, 0);
        Right6.addBox(0F, 0F, 0F, 4, 1, 1);
        Right6.setRotationPoint(-8F, 14F, 1F);
        Right6.setTextureSize(64, 32);
        Right6.mirror = true;
        setRotation(Right6, 0F, 0F, 0F);
        Right7 = new ModelRenderer(this, 0, 0);
        Right7.addBox(0F, 0F, 0F, 4, 1, 1);
        Right7.setRotationPoint(-8F, 17F, -2F);
        Right7.setTextureSize(64, 32);
        Right7.mirror = true;
        setRotation(Right7, 0F, 0F, 0F);
        Right8 = new ModelRenderer(this, 0, 0);
        Right8.addBox(0F, 0F, 0F, 4, 1, 1);
        Right8.setRotationPoint(-8F, 17F, 1F);
        Right8.setTextureSize(64, 32);
        Right8.mirror = true;
        setRotation(Right8, 0F, 0F, 0F);
        Up1 = new ModelRenderer(this, 0, 0);
        Up1.addBox(0F, 0F, 0F, 1, 4, 4);
        Up1.setRotationPoint(2F, 8F, -2F);
        Up1.setTextureSize(64, 32);
        Up1.mirror = true;
        setRotation(Up1, 0F, 0F, 0F);
        Up2 = new ModelRenderer(this, 0, 0);
        Up2.addBox(0F, 0F, 0F, 1, 4, 4);
        Up2.setRotationPoint(-3F, 8F, -2F);
        Up2.setTextureSize(64, 32);
        Up2.mirror = true;
        setRotation(Up2, 0F, 0F, 0F);
        Up3 = new ModelRenderer(this, 0, 0);
        Up3.addBox(0F, 0F, 0F, 4, 4, 1);
        Up3.setRotationPoint(-2F, 8F, -3F);
        Up3.setTextureSize(64, 32);
        Up3.mirror = true;
        setRotation(Up3, 0F, 0F, 0F);
        Up4 = new ModelRenderer(this, 0, 0);
        Up4.addBox(0F, 0F, 0F, 4, 4, 1);
        Up4.setRotationPoint(-2F, 8F, 2F);
        Up4.setTextureSize(64, 32);
        Up4.mirror = true;
        setRotation(Up4, 0F, 0F, 0F);
        Up5 = new ModelRenderer(this, 0, 0);
        Up5.addBox(0F, 0F, 0F, 1, 4, 1);
        Up5.setRotationPoint(-2F, 8F, -2F);
        Up5.setTextureSize(64, 32);
        Up5.mirror = true;
        setRotation(Up5, 0F, 0F, 0F);
        Up6 = new ModelRenderer(this, 0, 0);
        Up6.addBox(0F, 0F, 0F, 1, 4, 1);
        Up6.setRotationPoint(1F, 8F, -2F);
        Up6.setTextureSize(64, 32);
        Up6.mirror = true;
        setRotation(Up6, 0F, 0F, 0F);
        Up7 = new ModelRenderer(this, 0, 0);
        Up7.addBox(0F, 0F, 0F, 1, 4, 1);
        Up7.setRotationPoint(-2F, 8F, 1F);
        Up7.setTextureSize(64, 32);
        Up7.mirror = true;
        setRotation(Up7, 0F, 0F, 0F);
        Up8 = new ModelRenderer(this, 0, 0);
        Up8.addBox(0F, 0F, 0F, 1, 4, 1);
        Up8.setRotationPoint(1F, 8F, 1F);
        Up8.setTextureSize(64, 32);
        Up8.mirror = true;
        setRotation(Up8, 0F, 0F, 0F);
        Down1 = new ModelRenderer(this, 0, 0);
        Down1.addBox(0F, 0F, 0F, 1, 4, 4);
        Down1.setRotationPoint(-3F, 20F, -2F);
        Down1.setTextureSize(64, 32);
        Down1.mirror = true;
        setRotation(Down1, 0F, 0F, 0F);
        Down2 = new ModelRenderer(this, 0, 0);
        Down2.addBox(0F, 0F, 0F, 1, 4, 4);
        Down2.setRotationPoint(2F, 20F, -2F);
        Down2.setTextureSize(64, 32);
        Down2.mirror = true;
        setRotation(Down2, 0F, 0F, 0F);
        Down3 = new ModelRenderer(this, 0, 0);
        Down3.addBox(0F, 0F, 0F, 4, 4, 1);
        Down3.setRotationPoint(-2F, 20F, 2F);
        Down3.setTextureSize(64, 32);
        Down3.mirror = true;
        setRotation(Down3, 0F, 0F, 0F);
        Down4 = new ModelRenderer(this, 0, 0);
        Down4.addBox(0F, 0F, 0F, 4, 4, 1);
        Down4.setRotationPoint(-2F, 20F, -3F);
        Down4.setTextureSize(64, 32);
        Down4.mirror = true;
        setRotation(Down4, 0F, 0F, 0F);
        Down5 = new ModelRenderer(this, 0, 0);
        Down5.addBox(0F, 0F, 0F, 1, 4, 1);
        Down5.setRotationPoint(-2F, 20F, -2F);
        Down5.setTextureSize(64, 32);
        Down5.mirror = true;
        setRotation(Down5, 0F, 0F, 0F);
        Down6 = new ModelRenderer(this, 0, 0);
        Down6.addBox(0F, 0F, 0F, 1, 4, 1);
        Down6.setRotationPoint(1F, 20F, -2F);
        Down6.setTextureSize(64, 32);
        Down6.mirror = true;
        setRotation(Down6, 0F, 0F, 0F);
        Down7 = new ModelRenderer(this, 0, 0);
        Down7.addBox(0F, 0F, 0F, 1, 4, 1);
        Down7.setRotationPoint(-2F, 20F, 1F);
        Down7.setTextureSize(64, 32);
        Down7.mirror = true;
        setRotation(Down7, 0F, 0F, 0F);
        Down8 = new ModelRenderer(this, 0, 0);
        Down8.addBox(0F, 0F, 0F, 1, 4, 1);
        Down8.setRotationPoint(1F, 20F, 1F);
        Down8.setTextureSize(64, 32);
        Down8.mirror = true;
        setRotation(Down8, 0F, 0F, 0F);
        Base1 = new ModelRenderer(this, 0, 0);
        Base1.addBox(0F, 0F, 0F, 1, 6, 1);
        Base1.setRotationPoint(2F, 13F, -4F);
        Base1.setTextureSize(64, 32);
        Base1.mirror = true;
        setRotation(Base1, 0F, 0F, 0F);
        Base2 = new ModelRenderer(this, 0, 0);
        Base2.addBox(0F, 0F, 0F, 1, 6, 1);
        Base2.setRotationPoint(3F, 13F, 2F);
        Base2.setTextureSize(64, 32);
        Base2.mirror = true;
        setRotation(Base2, 0F, 0F, 0F);
        Base3 = new ModelRenderer(this, 0, 0);
        Base3.addBox(0F, 0F, 0F, 1, 6, 1);
        Base3.setRotationPoint(-4F, 13F, 2F);
        Base3.setTextureSize(64, 32);
        Base3.mirror = true;
        setRotation(Base3, 0F, 0F, 0F);
        Base4 = new ModelRenderer(this, 0, 0);
        Base4.addBox(0F, 0F, 0F, 1, 6, 1);
        Base4.setRotationPoint(-4F, 13F, -3F);
        Base4.setTextureSize(64, 32);
        Base4.mirror = true;
        setRotation(Base4, 0F, 0F, 0F);
        Base5 = new ModelRenderer(this, 0, 0);
        Base5.addBox(0F, 0F, 0F, 1, 1, 4);
        Base5.setRotationPoint(3F, 13F, -2F);
        Base5.setTextureSize(64, 32);
        Base5.mirror = true;
        setRotation(Base5, 0F, 0F, 0F);
        Base6 = new ModelRenderer(this, 0, 0);
        Base6.addBox(0F, 0F, 0F, 1, 1, 4);
        Base6.setRotationPoint(-4F, 13F, -2F);
        Base6.setTextureSize(64, 32);
        Base6.mirror = true;
        setRotation(Base6, 0F, 0F, 0F);
        Base7 = new ModelRenderer(this, 0, 0);
        Base7.addBox(0F, 0F, 0F, 1, 1, 4);
        Base7.setRotationPoint(3F, 18F, -2F);
        Base7.setTextureSize(64, 32);
        Base7.mirror = true;
        setRotation(Base7, 0F, 0F, 0F);
        Base8 = new ModelRenderer(this, 0, 0);
        Base8.addBox(0F, 0F, 0F, 1, 1, 4);
        Base8.setRotationPoint(-4F, 18F, -2F);
        Base8.setTextureSize(64, 32);
        Base8.mirror = true;
        setRotation(Base8, 0F, 0F, 0F);
        Base9 = new ModelRenderer(this, 0, 0);
        Base9.addBox(0F, 0F, 0F, 4, 1, 1);
        Base9.setRotationPoint(-2F, 13F, 3F);
        Base9.setTextureSize(64, 32);
        Base9.mirror = true;
        setRotation(Base9, 0F, 0F, 0F);
        Base10 = new ModelRenderer(this, 0, 0);
        Base10.addBox(0F, 0F, 0F, 4, 1, 1);
        Base10.setRotationPoint(-2F, 18F, 3F);
        Base10.setTextureSize(64, 32);
        Base10.mirror = true;
        setRotation(Base10, 0F, 0F, 0F);
        Base11 = new ModelRenderer(this, 0, 0);
        Base11.addBox(0F, 0F, 0F, 4, 1, 1);
        Base11.setRotationPoint(-2F, 13F, -4F);
        Base11.setTextureSize(64, 32);
        Base11.mirror = true;
        setRotation(Base11, 0F, 0F, 0F);
        Base12 = new ModelRenderer(this, 0, 0);
        Base12.addBox(0F, 0F, 0F, 4, 1, 1);
        Base12.setRotationPoint(-2F, 18F, -4F);
        Base12.setTextureSize(64, 32);
        Base12.mirror = true;
        setRotation(Base12, 0F, 0F, 0F);
        Base13 = new ModelRenderer(this, 0, 0);
        Base13.addBox(0F, 0F, 0F, 1, 6, 1);
        Base13.setRotationPoint(-3F, 13F, -4F);
        Base13.setTextureSize(64, 32);
        Base13.mirror = true;
        setRotation(Base13, 0F, 0F, 0F);
        Base14 = new ModelRenderer(this, 0, 0);
        Base14.addBox(0F, 0F, 0F, 1, 6, 1);
        Base14.setRotationPoint(3F, 13F, -3F);
        Base14.setTextureSize(64, 32);
        Base14.mirror = true;
        setRotation(Base14, 0F, 0F, 0F);
        Base15 = new ModelRenderer(this, 0, 0);
        Base15.addBox(0F, 0F, 0F, 1, 6, 1);
        Base15.setRotationPoint(2F, 13F, 3F);
        Base15.setTextureSize(64, 32);
        Base15.mirror = true;
        setRotation(Base15, 0F, 0F, 0F);
        Base16 = new ModelRenderer(this, 0, 0);
        Base16.addBox(0F, 0F, 0F, 1, 6, 1);
        Base16.setRotationPoint(-3F, 13F, 3F);
        Base16.setTextureSize(64, 32);
        Base16.mirror = true;
        setRotation(Base16, 0F, 0F, 0F);
        Base17 = new ModelRenderer(this, 0, 0);
        Base17.addBox(0F, 0F, 0F, 1, 1, 6);
        Base17.setRotationPoint(-3F, 12F, -3F);
        Base17.setTextureSize(64, 32);
        Base17.mirror = true;
        setRotation(Base17, 0F, 0F, 0F);
        Base18 = new ModelRenderer(this, 0, 0);
        Base18.addBox(0F, 0F, 0F, 1, 1, 6);
        Base18.setRotationPoint(2F, 12F, -3F);
        Base18.setTextureSize(64, 32);
        Base18.mirror = true;
        setRotation(Base18, 0F, 0F, 0F);
        Base19 = new ModelRenderer(this, 0, 0);
        Base19.addBox(0F, 0F, 0F, 4, 1, 1);
        Base19.setRotationPoint(-2F, 12F, -3F);
        Base19.setTextureSize(64, 32);
        Base19.mirror = true;
        setRotation(Base19, 0F, 0F, 0F);
        Base20 = new ModelRenderer(this, 0, 0);
        Base20.addBox(0F, 0F, 0F, 4, 1, 1);
        Base20.setRotationPoint(-2F, 12F, 2F);
        Base20.setTextureSize(64, 32);
        Base20.mirror = true;
        setRotation(Base20, 0F, 0F, 0F);
        Base21 = new ModelRenderer(this, 0, 0);
        Base21.addBox(0F, 0F, 0F, 4, 1, 1);
        Base21.setRotationPoint(-2F, 19F, -3F);
        Base21.setTextureSize(64, 32);
        Base21.mirror = true;
        setRotation(Base21, 0F, 0F, 0F);
        Base22 = new ModelRenderer(this, 0, 0);
        Base22.addBox(0F, 0F, 0F, 1, 1, 6);
        Base22.setRotationPoint(2F, 19F, -3F);
        Base22.setTextureSize(64, 32);
        Base22.mirror = true;
        setRotation(Base22, 0F, 0F, 0F);
        Base23 = new ModelRenderer(this, 0, 0);
        Base23.addBox(0F, 0F, 0F, 4, 1, 1);
        Base23.setRotationPoint(-2F, 19F, 2F);
        Base23.setTextureSize(64, 32);
        Base23.mirror = true;
        setRotation(Base23, 0F, 0F, 0F);
        Base24 = new ModelRenderer(this, 0, 0);
        Base24.addBox(0F, 0F, 0F, 1, 1, 6);
        Base24.setRotationPoint(-3F, 19F, -3F);
        Base24.setTextureSize(64, 32);
        Base24.mirror = true;
        setRotation(Base24, 0F, 0F, 0F);
        CapRight = new ModelRenderer(this, 0, 0);
        CapRight.addBox(0F, 0F, 0F, 1, 4, 4);
        CapRight.setRotationPoint(-5F, 14F, -2F);
        CapRight.setTextureSize(64, 32);
        CapRight.mirror = true;
        setRotation(CapRight, 0F, 0F, 0F);
        CapLeft = new ModelRenderer(this, 0, 0);
        CapLeft.addBox(0F, 0F, 0F, 1, 4, 4);
        CapLeft.setRotationPoint(4F, 14F, -2F);
        CapLeft.setTextureSize(64, 32);
        CapLeft.mirror = true;
        setRotation(CapLeft, 0F, 0F, 0F);
        CapFront = new ModelRenderer(this, 0, 0);
        CapFront.addBox(0F, 0F, 0F, 4, 4, 1);
        CapFront.setRotationPoint(-2F, 14F, -5F);
        CapFront.setTextureSize(64, 32);
        CapFront.mirror = true;
        setRotation(CapFront, 0F, 0F, 0F);
        CapBack = new ModelRenderer(this, 0, 0);
        CapBack.addBox(0F, 0F, 0F, 4, 4, 1);
        CapBack.setRotationPoint(-2F, 14F, 4F);
        CapBack.setTextureSize(64, 32);
        CapBack.mirror = true;
        setRotation(CapBack, 0F, 0F, 0F);
        CapUp = new ModelRenderer(this, 0, 0);
        CapUp.addBox(0F, 0F, 0F, 4, 1, 4);
        CapUp.setRotationPoint(-2F, 11F, -2F);
        CapUp.setTextureSize(64, 32);
        CapUp.mirror = true;
        setRotation(CapUp, 0F, 0F, 0F);
        CapDown = new ModelRenderer(this, 0, 0);
        CapDown.addBox(0F, 0F, 0F, 4, 1, 4);
        CapDown.setRotationPoint(-2F, 20F, -2F);
        CapDown.setTextureSize(64, 32);
        CapDown.mirror = true;
        setRotation(CapDown, 0F, 0F, 0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5){
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        Front1.render(f5);
        Front2.render(f5);
        Front3.render(f5);
        Front4.render(f5);
        Front5.render(f5);
        Front6.render(f5);
        Front7.render(f5);
        Front8.render(f5);
        Back1.render(f5);
        Back2.render(f5);
        Back3.render(f5);
        Back4.render(f5);
        Back5.render(f5);
        Back6.render(f5);
        Back7.render(f5);
        Back8.render(f5);
        Left1.render(f5);
        Left2.render(f5);
        Left3.render(f5);
        Left4.render(f5);
        Left5.render(f5);
        Left6.render(f5);
        Left7.render(f5);
        Left8.render(f5);
        Right1.render(f5);
        Right2.render(f5);
        Right3.render(f5);
        Right4.render(f5);
        Right5.render(f5);
        Right6.render(f5);
        Right7.render(f5);
        Right8.render(f5);
        Up1.render(f5);
        Up2.render(f5);
        Up3.render(f5);
        Up4.render(f5);
        Up5.render(f5);
        Up6.render(f5);
        Up7.render(f5);
        Up8.render(f5);
        Down1.render(f5);
        Down2.render(f5);
        Down3.render(f5);
        Down4.render(f5);
        Down5.render(f5);
        Down6.render(f5);
        Down7.render(f5);
        Down8.render(f5);
        Base1.render(f5);
        Base2.render(f5);
        Base3.render(f5);
        Base4.render(f5);
        Base5.render(f5);
        Base6.render(f5);
        Base7.render(f5);
        Base8.render(f5);
        Base9.render(f5);
        Base10.render(f5);
        Base11.render(f5);
        Base12.render(f5);
        Base13.render(f5);
        Base14.render(f5);
        Base15.render(f5);
        Base16.render(f5);
        Base17.render(f5);
        Base18.render(f5);
        Base19.render(f5);
        Base20.render(f5);
        Base21.render(f5);
        Base22.render(f5);
        Base23.render(f5);
        Base24.render(f5);
        CapRight.render(f5);
        CapLeft.render(f5);
        CapFront.render(f5);
        CapBack.render(f5);
        CapUp.render(f5);
        CapDown.render(f5);
    }

    public void renderModel(float size, boolean[] sidesConnected, boolean grate){
        if(sidesConnected[ForgeDirection.SOUTH.ordinal()]) {
            Front1.render(size);
            Front2.render(size);
            Front3.render(size);
            Front4.render(size);
            Front5.render(size);
            Front6.render(size);
            Front7.render(size);
            Front8.render(size);
        } else if(!grate) {
            CapFront.render(size);
        }
        if(sidesConnected[ForgeDirection.NORTH.ordinal()]) {
            Back1.render(size);
            Back2.render(size);
            Back3.render(size);
            Back4.render(size);
            Back5.render(size);
            Back6.render(size);
            Back7.render(size);
            Back8.render(size);
        } else if(!grate) {
            CapBack.render(size);
        }
        if(sidesConnected[ForgeDirection.EAST.ordinal()]) {
            Left1.render(size);
            Left2.render(size);
            Left3.render(size);
            Left4.render(size);
            Left5.render(size);
            Left6.render(size);
            Left7.render(size);
            Left8.render(size);
        } else if(!grate) {
            CapLeft.render(size);
        }
        if(sidesConnected[ForgeDirection.WEST.ordinal()]) {
            Right1.render(size);
            Right2.render(size);
            Right3.render(size);
            Right4.render(size);
            Right5.render(size);
            Right6.render(size);
            Right7.render(size);
            Right8.render(size);
        } else if(!grate) {
            CapRight.render(size);
        }
        if(sidesConnected[ForgeDirection.UP.ordinal()]) {
            Up1.render(size);
            Up2.render(size);
            Up3.render(size);
            Up4.render(size);
            Up5.render(size);
            Up6.render(size);
            Up7.render(size);
            Up8.render(size);
        } else if(!grate) {
            CapUp.render(size);
        }
        if(sidesConnected[ForgeDirection.DOWN.ordinal()]) {
            Down1.render(size);
            Down2.render(size);
            Down3.render(size);
            Down4.render(size);
            Down5.render(size);
            Down6.render(size);
            Down7.render(size);
            Down8.render(size);
        } else if(!grate) {
            CapDown.render(size);
        }

        Base1.render(size);
        Base2.render(size);
        Base3.render(size);
        Base4.render(size);
        Base5.render(size);
        Base6.render(size);
        Base7.render(size);
        Base8.render(size);
        Base9.render(size);
        Base10.render(size);
        Base11.render(size);
        Base12.render(size);
        Base13.render(size);
        Base14.render(size);
        Base15.render(size);
        Base16.render(size);
        Base17.render(size);
        Base18.render(size);
        Base19.render(size);
        Base20.render(size);
        Base21.render(size);
        Base22.render(size);
        Base23.render(size);
        Base24.render(size);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z){
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

}
